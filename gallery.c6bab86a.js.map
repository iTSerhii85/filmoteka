{"mappings":"iiBAAAA,EAAA,SAAAC,SAA8CC,KAAKC,MAAM,qJCAzDH,EAAA,S,iBCAAI,EAAiBJ,EAAA,SAAAK,aAA6C,SAAWL,EAAA,SAAAM,QAA6C,SCWtH,IAAMC,EAAgBC,SAASC,cAAc,uBACvCC,EAAcF,SAASC,cAAc,qBACrCE,EAAaH,SAASC,cAAc,uBACpCG,EAAkBJ,SAASC,cAAc,oBACtBD,SAASC,cAAc,qBAGxB,SAAfI,EAAmBC,GAC1B,IAAMC,EAAkBC,aAAaC,QAAQH,GACvCI,EAAoBhB,KAAKC,MAAMY,GAUrC,OATAI,QAAQC,IAAIF,GASLA,C,CAID,IAAFG,EAAeR,EAAmB,yBAClCS,EAAaT,EAAmB,uBAOb,SAAhBU,EAAcC,GACrB,GAAoB,OAAhBA,EAEF,OADAC,IACOb,EAAgBc,UAAUC,OAAO,aAG1C,IAgCMC,EAAgBJ,EAAYK,KAhCZ,SAAAC,GACpBL,IACAM,EAAgBD,GAEhB,IAAIE,EAAY,GAOhB,OALEA,EADEF,EAAIG,YACM,kCAAkDC,OAAhBJ,EAAIG,aAEtCE,EAAA/B,GAGP,gCAC8D8B,OAD9BJ,EAAIM,GAAG,+EAE5CF,OADmEF,EAAU,WAGlDE,OAF3BJ,EAAIO,OAASP,EAAIQ,KAClB,4CAIgCJ,OAHJJ,EAAIO,OAASP,EAAIQ,KAAK,qHAO5CJ,OAJ0BH,EAAgBD,GAAK,0EAOUI,OAHzDJ,EAAIS,aAAaC,MAAM,EAAG,IAAMV,EAAIW,eAAeD,MAAM,EAAG,IAAM,GAAG,2FAKrEN,OAFyDJ,EAAIY,aAAaC,QAC1E,GACA,0C,IAK4CC,KAAK,IAC1DjC,EAAWkC,mBAAmB,YAAajB,E,CAgBlB,SAAlBG,EAAgBD,GACvB,IAAMgB,EAAkB9B,aAAaC,QAAQ,mBACvC8B,EAAkB7C,KAAKC,MAAM2C,GAC/BE,EAAY,GAEVC,EAAYnB,EAAIoB,UAEjBC,GAAgB,EAAhBC,GAAgB,EAAhBC,OAAgBC,E,IAArB,QAAKC,EAAAC,EAAoBT,EAAeU,OAAAC,cAAnCP,GAAAI,EAAAC,EAAgBG,QAAAC,MAAhBT,GAAgB,GAAhB,IAAMU,EAANN,EAAgBO,MACfb,EAAUc,SAASF,EAAWzB,KAChCY,EAAUgB,KAAKH,EAAWvB,K,WAFzBc,GAAgB,EAAhBC,EAAgBY,C,aAAhBd,GAAgB,MAAhBK,EAAgBU,QAAhBV,EAAgBU,Q,YAAhBd,E,MAAAC,C,EAML,IAAIc,EAAY,GAShB,OARyB,IAArBnB,EAAUoB,OACZD,EAAY,gBACHnB,EAAUoB,QAAU,EAC7BD,EAAYnB,EAAUJ,KAAK,OAE3BI,EAAUqB,OAAO,EAAGrB,EAAUoB,QAC9BD,EAAYnB,EAAUJ,KAAK,MAAQ,WAE9BuB,C,CAuCT,SAAS1C,IACPd,EAAW2D,UAAY,E,CAzHY/C,EAAvBF,GACdd,EAAcmB,UAAU6C,IAAI,iBAmF5BhE,EAAciE,iBAAiB,SAG/B,WAWEjE,EAAcmB,UAAU6C,IAAI,iBAC5B7D,EAAYgB,UAAUC,OAAO,iBAC7Bf,EAAgBc,UAAU6C,IAAI,aAC9BhD,EAAcF,E,IAhBhBX,EAAY8D,iBAAiB,SAmB7B,WAUE5D,EAAgBc,UAAU6C,IAAI,aAC9B7D,EAAYgB,UAAU6C,IAAI,iBAC1BhE,EAAcmB,UAAUC,OAAO,iBAC/BJ,EAAcD,E","sources":["node_modules/@parcel/runtime-js/lib/runtime-9a4a0a4b5afa0785.js","src/gallery.js","node_modules/@parcel/runtime-js/lib/runtime-e4b0789cd9ede7a0.js","src/js/local-storage.js"],"sourcesContent":["require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"euV2r\\\":\\\"gallery.c6bab86a.js\\\",\\\"buPbL\\\":\\\"no-image.0b269193.jpg\\\",\\\"6teei\\\":\\\"gallery.6b9c2766.js\\\"}\"));","import './js/preloader';\nimport './js/footer-modal';\nimport './js/local-storage';\nimport './js/dark-light';\n","module.exports = require('./helpers/bundle-url').getBundleURL('euV2r') + require('./helpers/bundle-manifest').resolve(\"buPbL\");","import no_image from '../images/no-image.jpg';\n\n// !!!!!!!!!!добавил это  !!!!!!!!!!!!!!!!\n\n// import { paginationMarkUp } from './pagination.js';\n// const paginationBox = document.querySelector('.pagination');\n// let currentPage = 1;\n// let maxPage = 1;\n\n// -----------------------\n\nconst watchedLibBtn = document.querySelector('.js-watched-lib-btn');\nconst queueLibBtn = document.querySelector('.js-queue-lib-btn');\nconst libraryBox = document.querySelector('.js-library-gallery');\nconst emptyGalleryBox = document.querySelector('.info-notify-box');\nconst emptyGalleryText = document.querySelector('.info-notify-text');\n\n// Функція розпарсить об'єкти з localStorage\nfunction localStorageObject(key) {\n  const getObjectFromLs = localStorage.getItem(key);\n  const parseObjectFromLs = JSON.parse(getObjectFromLs);\n  console.log(parseObjectFromLs);\n\n  // currentPage = 1;\n  // if (parseObjectFromLs === null) {\n  //   return\n  // } else { maxPage = Math.ceil(parseObjectFromLs.length / 20);\n\n  // paginationMarkUp(currentPage, maxPage)}\n\n  return parseObjectFromLs;\n}\n\n// ключі від localStorage\nconst watchedArray = localStorageObject('WATCHED_LIST_DATA_KEY');\nconst queueArray = localStorageObject('QUEUE_LIST_DATA_KEY');\n\n// Рендерить розмітку у бібліотеці по дефолту\nrenderLibrary(watchedArray);\nwatchedLibBtn.classList.add('btn-is-active');\n\n// Функція для рендуру розмітки\nfunction renderLibrary(arrayMovies) {\n  if (arrayMovies === null) {\n    clearMarkup();\n    return emptyGalleryBox.classList.remove('is-hidden');\n  }\n\n  const markupOneCard = obj => {\n    clearMarkup();\n    checkGenresById(obj);\n\n    let posterSrc = '';\n    if (obj.poster_path) {\n      posterSrc = `https://image.tmdb.org/t/p/w500${obj.poster_path}`;\n    } else {\n      posterSrc = no_image;\n    }\n\n    return ` <li class=\"card-wraper\" id=\"${obj.id}\">\n       <a class=\"card-wraper_link\" href=\"#\"><img class=\"card-img\" src=\"${posterSrc}\" alt=\"${\n      obj.title || obj.name\n    }\"/></a>\n       <div class=\"card-title\">${obj.title || obj.name}</div>\n      <div class=\"wraper\">\n         <div class=\"card-genre-wraper\">\n           <div class=\"card-genre\">${checkGenresById(obj)}</div>\n         </div>\n         <div class=\"card-year\">\n\n         ${obj.release_date.slice(0, 4) || obj.first_air_date.slice(0, 4) || ''}\n\n         </div>\n         <div class=\"card-rating-wraper\"><div class=\"card-rating\">${obj.vote_average.toFixed(\n           1\n         )}</div></div>\n       </div>\n     </li>`;\n  };\n\n  const libraryMarkup = arrayMovies.map(markupOneCard).join('');\n  libraryBox.insertAdjacentHTML('beforeend', libraryMarkup);\n\n  // !!!!!!!!!!добавил это  !!!!!!!!!!!!!!!!\n\n  // currentPage = 1;\n  // let arr = localStorage.getItem('TRENDING_DATA_KEY');\n  // let parsedArr = JSON.parse(arr);\n  // console.log(parsedArr);\n  // maxPage = Math.ceil(parsedArr.length / 20);\n  // console.log(maxPage);\n  // paginationMarkUp(currentPage, maxPage);\n\n  // -----------------------\n}\n\n// Функція для генерації жанрів по id\nfunction checkGenresById(obj) {\n  const savedGenresData = localStorage.getItem('GENRES_DATA_KEY');\n  const parseGenresData = JSON.parse(savedGenresData);\n  let genresArr = [];\n\n  const genresIds = obj.genre_ids;\n\n  for (const parseGenre of parseGenresData) {\n    if (genresIds.includes(parseGenre.id)) {\n      genresArr.push(parseGenre.name);\n    }\n  }\n\n  let genresStr = '';\n  if (genresArr.length === 0) {\n    genresStr = 'Unknown genre';\n  } else if (genresArr.length <= 2) {\n    genresStr = genresArr.join(', ');\n  } else {\n    genresArr.splice(2, genresArr.length);\n    genresStr = genresArr.join(', ') + ', Other';\n  }\n  return genresStr;\n}\n\nwatchedLibBtn.addEventListener('click', onClickWatched);\nqueueLibBtn.addEventListener('click', onClickQueue);\n\nfunction onClickWatched() {\n  // !!!!!!!!!!добавил это  !!!!!!!!!!!!!!!!\n\n  // currentPage = 1;\n  // let arr = localStorage.getItem('TRENDING_DATA_KEY');\n  // let parsedArr = JSON.parse(arr);\n  // maxPage = Math.ceil(parsedArr.length / 20);\n  // paginationMarkUp(currentPage, maxPage);\n\n  // -----------------------\n\n  watchedLibBtn.classList.add('btn-is-active');\n  queueLibBtn.classList.remove('btn-is-active');\n  emptyGalleryBox.classList.add('is-hidden');\n  renderLibrary(watchedArray);\n}\n\nfunction onClickQueue() {\n  // !!!!!!!!!!добавил это  !!!!!!!!!!!!!!!!\n\n  // currentPage = 1;\n  // let arr = localStorage.getItem('SEARCH_RESULT_DATA_KEY');\n  // let parsedArr = JSON.parse(arr);\n  // maxPage = Math.ceil(parsedArr.length / 20);\n  // paginationMarkUp(currentPage, maxPage);\n  // -----------------------\n\n  emptyGalleryBox.classList.add('is-hidden');\n  queueLibBtn.classList.add('btn-is-active');\n  watchedLibBtn.classList.remove('btn-is-active');\n  renderLibrary(queueArray);\n}\n\nfunction clearMarkup() {\n  libraryBox.innerHTML = '';\n}\n\n// !!!!!!!!!!добавил это  !!!!!!!!!!!!!!!!\n\n// paginationBox.addEventListener('click', Onclick);\n\n// function Onclick(evt) {\n//   if (evt.target.textContent == '...') {\n//     return;\n//   }\n//   if (evt.target.nodeName !== 'P') {\n//     return;\n//   }\n//   currentPage = evt.target.textContent;\n\n//   if (evt.target.textContent == '>>') {\n//     currentPage = Number(targetPage.textContent) + 1;\n//   }\n\n//   if (evt.target.textContent == '<<') {\n//     currentPage = Number(targetPage.textContent) - 1;\n//   }\n\n//   paginationMarkUp(currentPage, maxPage);\n//   for (i = (currentPage - 1) * 20; i < (currentPage - 1) * 20 + 20; i += 1) {\n//     console.log(`i=${i}`);\n\n//     // И вот тут отрисовываем карточки из массива по интексам   <<<<<-----------\n//   }\n// }\n\n// -----------------------\n"],"names":["parcelRequire","register","JSON","parse","$087c45695e1f0c2f$exports","getBundleURL","resolve","$3791646d3ae2cee8$var$watchedLibBtn","document","querySelector","$3791646d3ae2cee8$var$queueLibBtn","$3791646d3ae2cee8$var$libraryBox","$3791646d3ae2cee8$var$emptyGalleryBox","$3791646d3ae2cee8$var$localStorageObject","key","getObjectFromLs","localStorage","getItem","parseObjectFromLs","console","log","$3791646d3ae2cee8$var$watchedArray","$3791646d3ae2cee8$var$queueArray","$3791646d3ae2cee8$var$renderLibrary","arrayMovies","$3791646d3ae2cee8$var$clearMarkup","classList","remove","libraryMarkup","map","obj","$3791646d3ae2cee8$var$checkGenresById","posterSrc","poster_path","concat","$parcel$interopDefault","id","title","name","release_date","slice","first_air_date","vote_average","toFixed","join","insertAdjacentHTML","savedGenresData","parseGenresData","genresArr","genresIds","genre_ids","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","parseGenre","value","includes","push","err","return","genresStr","length","splice","innerHTML","add","addEventListener"],"version":3,"file":"gallery.c6bab86a.js.map"}